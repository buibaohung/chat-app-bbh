{"version":3,"sources":["config/index.js","constants/signIn-constants.js","reducers/signIn-reducers.js","constants/signUp-constants.js","reducers/signUp-reducers.js","constants/listUser-constants.js","reducers/listUser-reducers.js","constants/listChat-constants.js","reducers/listChat-reducers.js","reducers/index.js","reduxStore.js","utils/common.js","api/UserAPI.js","components/PrivateRoute.js","actions/signIn-actions.js","actions/signUp-actions.js","components/Alert.js","screens/login/Login.js","api/ChatAPI.js","actions/listChat-actions.js","actions/listUser-actions.js","screens/layout/MainLayout.js","router.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","api_url","START_LOGIN","LOGIN_SUCCESSFULL","LOGIN_FAIL","LOGIN_HANDLE_ERROR","initialState","startLogin","loginSuccessfull","error","START_SIGNUP","SIGNUP_SUCCESSFULL","SIGNUP_FAIL","SIGNUP_HANDLE_ERROR","startSignup","signupSuccessfull","REQUEST_LIST_USER","LIST_USER_FETCH_SUCCESSFULL","LIST_USER_FETCH_FAIL","LIST_USER_HANDLE_ERROR","isLoading","users","REQUEST_LIST_CHAT","LIST_CHAT_FETCH_SUCCESSFULL","LIST_CHAT_FETCH_FAIL","LIST_CHAT_HANDLE_ERROR","chats","combineReducers","loginData","state","arguments","length","undefined","action","type","Object","objectSpread","err","signupData","userData","chatData","reduxStore","createStore","rootReducer","compose","applyMiddleware","thunk","getHeaders","token","headers","Headers","Content-Type","Accept","getToken","append","KEY_TOKEN","localStorage","getItem","setToken","setItem","isLoggedIn","PrivateRoute","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","to","pathname","from","location","login","username","password","dispatch","Promise","asyncToGenerator","regenerator_default","mark","_callee","resolve","reject","wrap","_context","prev","next","abrupt","fetch","config","method","body","JSON","stringify","then","res","json","resJSON","status","message","result","id","catch","stop","_x","_x2","apply","this","loginAPI","loginFail","signup","full_name","phone","_ref2","_callee2","_context2","user","console","log","_x3","_x4","signupAPI","signupFail","Transition","Slide_default","direction","Alert","open","handleClose","_this","setState","onClose","Dialog_default","TransitionComponent","aria-labelledby","aria-describedby","DialogTitle_default","title","DialogContent_default","DialogContentText_default","children","DialogActions_default","Button_default","onClick","color","styles","containers","display","flexDirection","justifyContent","alignItems","minHeight","button","fontSize","rightpage","backgroundColor","height","width","verticalAlign","leftpage","position","above","textAlign","marginTop","margin","fontWeight","logins","register","_register","defineProperty","registers","textfield","textwhile","textwhiles","Login","tab","phonenumber","password1","showPassword","handleChange","prop","event","target","value","handleClickShowPassword","onClickSignin","_this$state","alert","onClickSignup","_this$state2","history","push","_this2","style","class","Group_default","Chat_default","Share_default","Fab_default","variant","aria-label","TextField_default","label","onChange","InputProps","endAdornment","InputAdornment_default","IconButton_default","VisibilityOff_default","Visibility_default","disabled","showPassword1","Alert_Alert","handeErrorLogin","handeErrorSignup","toString","connect","getAllChat","_ref3","_callee3","_context3","_x5","_x6","getListChats","fetchSuccessfully","getListUsers","root","search","borderRight","divappbar","flexGrow","appbar","chatbox","padding","overflow","onappbar","text","borderRadius","inputbox","bottom","signout","seen","paddingBottom","marginLeft","othersMember","currentMember","containsMessage","max∆Øidth","MainLayout","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onClickSignout","sessionStorage","removeItem","socket","close","clear","window","reload","handleSearch","handleToggle","checked","currentIndex","indexOf","newChecked","toConsumableArray","splice","handleScroll","x","document","getElementById","scrollTop","scrollHeight","handleClickUser","i","choose","avt","handleSeen","lastIDChat","chatsData","map","m","sender","_id","receiver","emit","chat_id","tabuser","dataTemp","isSeen","handleKeyPressSearch","bind","assertThisInitialized","e","key","content","chat","_created","Date","now","temp","preventDefault","io","query","on","response","_this3","onFocus","onKeyPress","Search_default","List_default","dense","ListItem_default","ListItemAvatar_default","Avatar_default","alt","concat","src","ListItemText_default","primary","AppBar_default","Toolbar_default","Typography_default","Paper_default","elevation","onMouseEnter","renderMessage","onSubmit","NavigateNext_default","name","Tooltip_default","Root","react_router_dom","exact","path","components_PrivateRoute","Main","App","es","store","router","Boolean","hostname","match","ReactDOM","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.643b95fb.chunk.js","sourcesContent":["const config = {\n     api_url: \"https://chat-app-bbh.herokuapp.com/api\",\n}\n\nmodule.exports = config","export const START_LOGIN = 'START_LOGIN'\nexport const LOGIN_SUCCESSFULL = 'LOGIN_SUCCESSFULL'\nexport const LOGIN_FAIL = 'LOGIN_FAIL'\nexport const LOGIN_HANDLE_ERROR = 'LOGIN_HANDLE_ERROR'","import {START_LOGIN, LOGIN_SUCCESSFULL, LOGIN_HANDLE_ERROR, LOGIN_FAIL} from '../constants/signIn-constants'\n\nconst initialState = {\n    startLogin: false,\n    loginSuccessfull: false,\n    error: null\n}\n\nexport const loginData = (state = initialState, action) => {\n    switch(action.type){\n    case START_LOGIN:\n        return {\n            ...state,\n            startLogin: true\n        }\n    case LOGIN_SUCCESSFULL:\n        return {\n            ...state,\n            startLogin: false,\n            loginSuccessfull: true\n        }\n    case LOGIN_FAIL:\n        return {\n            ...state,\n            startLogin: false,\n            error: action.err\n        }\n    case LOGIN_HANDLE_ERROR:\n        return {\n            ...state,\n            error: null\n        }\n    default:\n        return state\n    }\n}","export const START_SIGNUP = 'START_SIGNUP'\nexport const SIGNUP_SUCCESSFULL = 'SIGNUP_SUCCESSFULL'\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL'\nexport const SIGNUP_HANDLE_ERROR = 'SIGNUP_HANDLE_ERROR'\n","import {START_SIGNUP, SIGNUP_SUCCESSFULL, SIGNUP_HANDLE_ERROR, SIGNUP_FAIL} from '../constants/signUp-constants'\n\nconst initialState = {\n    startSignup: false,\n    signupSuccessfull: false,\n    error: null\n}\n\nexport const signupData = (state = initialState, action) => {\n    switch(action.type){\n    case START_SIGNUP:\n        return {\n            ...state,\n            startSignup: true\n        }\n    case SIGNUP_SUCCESSFULL:\n        return {\n            ...state,\n            startSignup: false,\n            signupSuccessfull: true\n        }\n    case SIGNUP_FAIL:\n        return {\n            ...state,\n            startSignup: false,\n            error: action.err\n        }\n    case SIGNUP_HANDLE_ERROR:\n        return {\n            ...state,\n            error: null\n        }\n    default:\n        return state\n    }\n}","export const REQUEST_LIST_USER = 'REQUEST_LIST_USER'\nexport const LIST_USER_FETCH_SUCCESSFULL = 'LIST_USER_FETCH_SUCCESSFULL'\nexport const LIST_USER_FETCH_FAIL = 'LIST_USER_FETCH_FAIL'\nexport const LIST_USER_HANDLE_ERROR = 'LIST_USER_HANDLE_ERROR'\n","import {REQUEST_LIST_USER, LIST_USER_FETCH_FAIL, LIST_USER_FETCH_SUCCESSFULL, LIST_USER_HANDLE_ERROR} from '../constants/listUser-constants'\n\nconst initialState = {\n    isLoading: false,\n    users: [],\n    error: null\n}\n\nexport const userData = (state = initialState, action) => {\n    switch(action.type){\n    case REQUEST_LIST_USER:\n        return {\n            ...state,\n            isLoading: true\n        }\n    case LIST_USER_FETCH_SUCCESSFULL:\n        return {\n            ...state,\n            isLoading: false,\n            users: action.users\n        }\n    case LIST_USER_FETCH_FAIL:\n        return {\n            ...state,\n            isLoading: false,\n            error: action.error\n        }\n    case LIST_USER_HANDLE_ERROR:\n        return {\n            ...state,\n            error: null\n        }\n    default:\n        return state\n    }\n}","export const REQUEST_LIST_CHAT = 'REQUEST_LIST_CHAT'\nexport const LIST_CHAT_FETCH_SUCCESSFULL = 'LIST_CHAT_FETCH_SUCCESSFULL'\nexport const LIST_CHAT_FETCH_FAIL = 'LIST_CHAT_FETCH_FAIL'\nexport const LIST_CHAT_HANDLE_ERROR = 'LIST_CHAT_HANDLE_ERROR'\n","import {REQUEST_LIST_CHAT, LIST_CHAT_FETCH_FAIL, LIST_CHAT_FETCH_SUCCESSFULL, LIST_CHAT_HANDLE_ERROR} from '../constants/listChat-constants'\n\nconst initialState = {\n    isLoading: false,\n    chats: [],\n    error: null\n}\n\nexport const chatData = (state = initialState, action) => {\n    switch(action.type){\n    case REQUEST_LIST_CHAT:\n        return {\n            ...state,\n            isLoading: true\n        }\n    case LIST_CHAT_FETCH_SUCCESSFULL:\n        return {\n            ...state,\n            isLoading: false,\n            chats: action.chats\n        }\n    case LIST_CHAT_FETCH_FAIL:\n        return {\n            ...state,\n            isLoading: false,\n            error: action.error\n        }\n    case LIST_CHAT_HANDLE_ERROR:\n        return {\n            ...state,\n            error: null\n        }\n    default:\n        return state\n    }\n}","import { combineReducers } from \"redux\";\n\nimport {loginData} from \"../reducers/signIn-reducers\"\n\nimport {signupData} from \"../reducers/signUp-reducers\"\n\nimport {userData} from \"../reducers/listUser-reducers\"\n\nimport {chatData} from \"../reducers/listChat-reducers\"\n\nexport default combineReducers({\n    loginData,\n\n    signupData,\n\n    userData,\n    \n    chatData,\n});","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from 'redux-thunk';\nimport rootReducer from \"./reducers\";\n\nconst reduxStore = createStore(\n    rootReducer,\n    compose(applyMiddleware(thunk))\n);\n\nexport default reduxStore;","import {getToken} from '../api/UserAPI'\n\nexport function getHeaders(token) {\n    var headers = new Headers({\n        \"Content-Type\": \"application/json; charset=utf-8\",\n        \"Accept\": \"application/json\",\n    })\n  \n    token = token || getToken()\n    if(token)\n        headers.append('x-access-token', token)\n    return headers\n}","import config from '../config'\nimport {getHeaders} from '../utils/common'\nimport jwtDecode from 'jwt-decode';\n\nconst KEY_TOKEN = 'userToken';\n\nexport function getToken(){\n    return localStorage.getItem(KEY_TOKEN);\n}\n\nexport function setToken(token) {\n    localStorage.setItem(KEY_TOKEN, token);\n}\n\nexport function login(username, password) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/users/login', {\n            method: \"POST\",\n            body: JSON.stringify({username, password}),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            let token = resJSON.result.token\n\n            localStorage.setItem('userID', resJSON.result.id);\n            localStorage.setItem('userToken', resJSON.result.token);\n\n            setToken(token)\n            resolve(token)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function signup(username, password, full_name, phone) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/users', {\n            method: \"POST\",\n            body: JSON.stringify({\n                user: {username, password, full_name, phone}\n            }),\n        })\n        .then(res => {\n            return res.json()\n        })\n        .then(resJSON=>{\n            console.log(resJSON)\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function findAllUsers() {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/users', {\n            headers: getHeaders(),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function findByID(userID) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/users/'+userID, {\n            headers: getHeaders(),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function isLoggedIn() {\n    const tok=getToken();\n    \n    return !!tok;\n}\n\nexport function signout() {\n    sessionStorage.removeItem(KEY_TOKEN);\n}\n\nexport function requireAuth(nextState, replace) {\n    if (!isLoggedIn()) {\n        replace({pathname: '/'});\n    }\n}\n\nexport function getTokenData() {\n    let token = sessionStorage.getItem(KEY_TOKEN);\n    return jwtDecode(token)\n}","import React from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport {isLoggedIn} from '../api/UserAPI';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (\n    isLoggedIn() ? (\n      <Component {...props}/>\n    ) : (\n      <Redirect to={{\n        pathname: '/',\n        state: { from: props.location }\n      }}/>\n    )\n  )}/>\n);\n\nexport default PrivateRoute;\n","import {login as loginAPI} from '../api/UserAPI'\nimport {START_LOGIN, LOGIN_SUCCESSFULL, LOGIN_FAIL, LOGIN_HANDLE_ERROR} from '../constants/signIn-constants'\n\nexport function login(username, password){\n    return (dispatch)=>{\n        dispatch(startLogin())\n\n        loginAPI(username, password)\n        .then(token=>{\n            dispatch(loginSuccessfull())\n        })\n        .catch(err=>dispatch(loginFail(err)))\n    }\n}\n\nexport function startLogin(){\n    return {\n        type: START_LOGIN,\n    }\n}\n\nexport function loginSuccessfull(){\n    return {\n        type: LOGIN_SUCCESSFULL,\n    }\n}\n\nexport function loginFail(err){\n    return {\n        type: LOGIN_FAIL,\n        err: err\n    }\n}\n\nexport function handeError(){\n    return {\n        type: LOGIN_HANDLE_ERROR,\n    }\n}","import {signup as signupAPI} from '../api/UserAPI'\nimport {START_SIGNUP, SIGNUP_SUCCESSFULL, SIGNUP_FAIL, SIGNUP_HANDLE_ERROR} from '../constants/signUp-constants'\n\nexport function signup(username, password, full_name, phone){\n    return (dispatch)=>{\n        dispatch(startSignup())\n\n        signupAPI(username, password, full_name, phone)\n        .then(user=>{\n            dispatch(signupSuccessfull())\n        })\n        .catch(err=>dispatch(signupFail(err)))\n    }\n}\n\nexport function startSignup(){\n    return {\n        type: START_SIGNUP,\n    }\n}\n\nexport function signupSuccessfull(){\n    return {\n        type: SIGNUP_SUCCESSFULL,\n    }\n}\n\nexport function signupFail(err){\n    return {\n        type: SIGNUP_FAIL,\n        err: err\n    }\n}\n\nexport function handeError(){\n    return {\n        type: SIGNUP_HANDLE_ERROR,\n    }\n}","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\n\nfunction Transition(props) {\n    return <Slide direction=\"up\" {...props} />;\n}\n\nexport default class Alert extends Component {\n    state = {\n        open: true\n    }\n\n    handleClose = () => {\n        this.setState({ open: false });\n\n        if (this.props.onClose) {\n            this.props.onClose()\n        }\n    };\n\n    render() {\n        return (\n            <Dialog\n                open={this.state.open}\n                TransitionComponent={Transition}\n                onClose={this.handleClose}\n                aria-labelledby=\"alert-dialog-slide-title\"\n                aria-describedby=\"alert-dialog-slide-description\"\n            >\n                <DialogTitle id=\"alert-dialog-slide-title\">\n                    {this.props.title}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-slide-description\">\n                        {this.props.children}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport {login, handeError as handeErrorLogin} from '../../actions/signIn-actions'\nimport {signup, handeError as handeErrorSignup} from '../../actions/signUp-actions'\nimport Alert from '../../components/Alert'\n\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport IconButton from '@material-ui/core/IconButton';\nimport Fab from '@material-ui/core/Fab';\n\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Visibility from '@material-ui/icons/Visibility';\nimport Share from '@material-ui/icons/Share';\nimport Group from '@material-ui/icons/Group';\nimport Chat from '@material-ui/icons/Chat';\n\nlet styles = {\n\n    containers: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: 400,\n    },\n\n    button:{\n        fontSize: '40px',\n    },\n    rightpage:{\n        display:\"inline-block\",\n        backgroundColor: \"#e6f7ff\",\n        height: \"calc(100vh)\",\n        width: \"calc(50vw)\",\n        verticalAlign: \"top\",\n    },\n      \n    leftpage:{\n        position: 'relative',\n        display:\"inline-block\",\n        backgroundColor: \"#fcfcfc\",\n        height: \"calc(100vh)\",\n        width: \"50vw\",\n        verticalAlign: \"top\",\n    },\n    above:{\n        textAlign:'center' ,\n        marginTop: 100,\n    },\n    login: {\n        // margin: \"10px 30px\",\n        margin: \"0 10px\",\n        color:\"#ffffff\",\n        backgroundColor:'#2765aa',\n        width : 200,\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n\n    logins: {\n        margin: 'auto',\n        color:\"#2765aa\",\n        backgroundColor:'#ffffff',\n        width : '25vw',\n        fontSize: 20,\n        fontWeight: 'bold',\n        display: \"block\",\n    },\n\n    register: {\n        margin: \"0 10px\",\n        margin: 'auto',\n        color:\"#2765aa\",\n        backgroundColor:'#ffffff',\n        width : 200,\n        fontSize: 20,\n        fontWeight: 'bold',\n    },\n\n    registers: {\n        // top: 100,\n        // margin: \"10px 30px\",\n        margin: 'auto',\n        color:\"#ffffff\",\n        backgroundColor:'#2765aa',\n        width : '25vw',\n        fontSize: 20,\n        fontWeight: 'bold',\n        display: \"block\",\n    },\n\n    textfield: {\n        margin: \"10px 30px\",\n        backgroundColor: '#ffffff',\n        width:\"15vw\"\n\n    },\n\n    textwhile :{\n        color:'#2765aa'\n    },\n    textwhiles :{\n        color:'#fcfcfc'\n    },\n}\n\nclass Login extends Component {\n    state = {\n        tab: 1,\n        username: \"\",\n        phonenumber: \"\",\n        password: \"\",\n        password1: \"\",\n        showPassword: false,\n    }\n\n    handleChange = prop => event => {\n        this.setState({ [prop]: event.target.value });\n    };\n    handleClickShowPassword = () => {\n        this.setState(state => ({ showPassword: !state.showPassword }));\n    };\n\n\n    onClickSignin = () => {\n        let {username, password} = this.state\n\n        if (!username) {\n            return alert(\"H√£y nh·∫≠p t√™n ƒëƒÉng nh·∫≠p.\")\n        }\n\n        if (!password) {\n            return alert(\"H√£y nh·∫≠p m·∫≠t kh·∫©u.\")\n        }\n\n        this.props.login(username, password)\n    }\n\n    onClickSignup = () => {\n        let {username, password, password1, phonenumber} = this.state\n        if (!phonenumber) {\n            return alert(\"H√£y nh·∫≠p s·ªë ƒëi·ªán tho·∫°i.\")\n        }\n\n        if (!username) {\n            return alert(\"H√£y nh·∫≠p t√™n ƒëƒÉng nh·∫≠p.\")\n        }\n\n        if (!password) {\n            return alert(\"H√£y nh·∫≠p m·∫≠t kh·∫©u.\")\n        }\n\n        if (password !== password1) {\n            return alert(\"M·∫≠t kh·∫©u nh·∫≠p l·∫°i kh√¥ng tr√πng\")\n        }\n\n        this.props.signup(username, password, phonenumber)\n    }\n    componentWillMount() {\n        if(localStorage.getItem('userToken')){\n            this.props.history.push('/app')\n    }}\n\n\n    render() {\n        // if( this.state.tab===2)\n        //     this.setState({tab: 1})\n\n        // let token = localStorage.getItem('userToken')\n        // if(token=!'')\n        // {      this.props.history.push('/app') }\n\n        if(this.props.loginData.loginSuccessfull)\n        this.props.history.push(\"/app\")\n        \n        return (\n            <div>\n            \n                <div style={styles.leftpage} class=\"imagebackgroud\">\n                    <div style={styles.containers}>\n                        <h1 style={styles.textwhile} > <Group style={styles.button}/> Join with us </h1>\n                        <h1 style={styles.textwhiles} > <Chat style={styles.button}/> Join the conversation with friends </h1>\n                        <h1 style={styles.textwhiles} > <Share style={styles.button}/> Share everything</h1>\n                    </div>\n                </div>\n                \n                <div style={styles.rightpage}>\n                    <div style={styles.above}> \n                        <Fab  variant=\"extended\" aria-label=\"Delete\" style={styles.login} onClick={()=>this.setState({tab: 2})} >\n                            ƒêƒÉng nh·∫≠p\n                        </Fab>\n                        <Fab variant=\"extended\" aria-label=\"Delete\" style={styles.register} onClick={()=>this.setState({tab: 3})} >\n                            ƒêƒÉng k√Ω\n                        </Fab>\n                    </div> \n                    {\n                        this.state.tab === 1 && (\n                            <div  class=\"imagesss\"> </div>\n                        )\n                    }\n                    {\n                        this.state.tab === 2 && (\n                            <div>\n                                <div style={styles.containers}> \n                                    <TextField\n                                        style={styles.textfield}\n                                        id=\"outlined-adornment-username\"\n                                        variant=\"outlined\"\n                                        label=\"T√™n ƒëƒÉng nh·∫≠p\"\n                                        value={this.state.username}\n                                        onChange={this.handleChange('username')}  \n                                    />\n\n                                    <TextField\n                                        style={styles.textfield}\n                                        id=\"outlined-adornment-password\"\n                                        variant=\"outlined\"\n                                        type={this.state.showPassword ? 'text' : 'password'}\n                                        label=\"M·∫≠t kh·∫©u\"\n                                        value={this.state.password}\n                                        onChange={this.handleChange('password')}\n                                        InputProps={{\n                                            endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton\n                                                aria-label=\"Toggle password visibility\"\n                                                onClick={this.handleClickShowPassword}\n                                                >\n                                                {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                                </IconButton>\n                                            </InputAdornment>\n                                            ),\n                                        }}\n                                        />\n                                </div>\n                                <Fab variant=\"extended\"\n                                    aria-label=\"Delete\"\n                                    style={styles.logins}  \n                                    onClick={this.onClickSignin}\n                                    disabled={this.props.loginData.startLogin}\n                                >\n                                    ƒêƒÉng nh·∫≠p\n                                </Fab>\n                           </div>\n                        )\n                    }\n                    {\n                        this.state.tab === 3 && (\n                            <div>\n                                <div style={styles.containers} > \n                                    <TextField\n                                    style={styles.textfield}\n                                    id=\"outlined-adornment-phonenumber\"\n                                    variant=\"outlined\"\n                                    label=\"S·ªë ƒëi·ªán tho·∫°i\"\n                                    value={this.state.phonenumber}\n                                    onChange={this.handleChange('phonenumber')}  \n                                    />\n\n                                    <TextField\n                                    style={styles.textfield}\n                                    id=\"outlined-adornment-username\"\n                                    variant=\"outlined\"\n                                    label=\"T√™n ƒëƒÉng nh·∫≠p\"\n                                    value={this.state.username}\n                                    onChange={this.handleChange('username')}  \n                                    />\n\n                                    <TextField\n                                    style={styles.textfield}\n                                    id=\"outlined-adornment-password\"\n                                    variant=\"outlined\"\n                                    type={this.state.showPassword ? 'text' : 'password'}\n                                    label=\"M·∫≠t kh·∫©u\"\n                                    value={this.state.password}\n                                    onChange={this.handleChange('password')}\n                                    InputProps={{\n                                        endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                            aria-label=\"Toggle password visibility\"\n                                            onClick={this.handleClickShowPassword}\n                                            >\n                                            {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                        ),\n                                    }}\n                                    />\n\n                                    <TextField\n                                    style={styles.textfield}\n                                    id=\"outlined-adornment-password1\"\n                                    variant=\"outlined\"\n                                    type={this.state.showPassword ? 'text' : 'password'}\n                                    label=\"Nh·∫≠p l·∫°i m·∫≠t kh·∫©u\"\n                                    value={this.state.password1}\n                                    onChange={this.handleChange('password1')}\n                                    InputProps={{\n                                        endAdornment: (\n                                        <InputAdornment position=\"end\">\n                                            <IconButton\n                                            aria-label=\"Toggle password visibility\"\n                                            onClick={this.handleClickShowPassword}\n                                            >\n                                            {this.state.showPassword1 ? <VisibilityOff /> : <Visibility />}\n                                            </IconButton>\n                                        </InputAdornment>\n                                        ),\n                                    }}\n                                    />\n                                </div>\n                                <Fab variant=\"extended\"\n                                    aria-label=\"Delete\" \n                                    style={styles.registers} \n                                    onClick={this.onClickSignup}\n                                    disabled={this.props.signupData.startSignup }\n                                >\n                                    ƒêƒÉng k√Ω\n                                </Fab>\n                            </div>\n                        )\n                    }\n                    {\n                        !!this.props.loginData.error && (\n                            <Alert title=\"Error\" onClose={this.props.handeErrorLogin}>{this.props.loginData.error}</Alert>\n                        )\n                    }\n                    {\n                        !!this.props.signupData.error && (\n                            <Alert title=\"Error\" onClose={this.props.handeErrorSignup}>{this.props.signupData.error.toString()}</Alert>\n                        )\n                    }\n                    {\n                        this.props.signupData.signupSuccessfull && (\n                            <Alert title=\"Successfull\" onClose={this.props.handeErrorSignup}> ƒêƒÉng k√Ω th√†ng c√¥ng!!! </Alert>\n                        )\n                    }\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    loginData: state.loginData,\n    signupData: state.signupData,\n})\n\nconst mapDispatchToProps = dispatch => ({\n    login: (username, password)=>dispatch(login(username, password)),\n    signup: (username, password, full_name)=>dispatch(signup(username, password, full_name)),\n    handeErrorLogin: ()=>dispatch(handeErrorLogin()),\n    handeErrorSignup: ()=>dispatch(handeErrorSignup()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import config from '../config'\nimport {getHeaders} from '../utils/common'\n\nexport function getChatBySender(userID) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/chats/sender/'+ userID, {\n            headers: getHeaders(),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function getChatByReceiver(userID) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/chats/receiver/'+ userID, {\n            headers: getHeaders(),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function getAllChat() {\n\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/chats', {\n            headers: getHeaders(),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n            localStorage.setItem('chatData', resJSON.result);\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function createChat(sender, receiver, content) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/chats', {\n            method: \"POST\",\n            headers: getHeaders(),\n            body: JSON.stringify({\n                chat: {sender, receiver, content}\n            }),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function deleteChat(chatID) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/chats/'+chatID, {\n            method: \"DELETE\",\n            headers: getHeaders(),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}\n\nexport function updateChat(chat) {\n    return new Promise(async (resolve, reject)=>{\n        return fetch(config.api_url+'/chats/' + chat._id, {\n            method: \"PUT\",\n            headers: getHeaders(),\n            body: JSON.stringify({\n                chat: {content: chat.content}\n            }),\n        })\n        .then(res => res.json())\n        .then(resJSON=>{\n            if (resJSON.status === 0) {\n                return reject(resJSON.error.message)\n            }\n\n            resolve(resJSON.result)\n        })\n        .catch(err=>reject(err))\n    })\n}","import {REQUEST_LIST_CHAT, LIST_CHAT_FETCH_SUCCESSFULL, LIST_CHAT_FETCH_FAIL, LIST_CHAT_HANDLE_ERROR} from '../constants/listChat-constants'\nimport {getAllChat} from '../api/ChatAPI'\n\nexport function requestListChat(){\n    return {\n        type: REQUEST_LIST_CHAT,\n    }\n}\n\nexport function fetchSuccessfully(chats){\n    return {\n        type: LIST_CHAT_FETCH_SUCCESSFULL,\n        chats\n    }\n}\n\nexport function fetchError(error){\n    return {\n        type: LIST_CHAT_FETCH_FAIL,\n        error\n    }\n}\n\nexport function handeError(){\n    return {\n        type: LIST_CHAT_HANDLE_ERROR,\n    }\n}\n\nexport function getListChats(){\n    return (dispatch)=>{\n        dispatch(requestListChat())\n\n        getAllChat()\n        .then(chats=>{\n            dispatch(fetchSuccessfully(chats))\n        })\n        .catch(err=>dispatch(fetchError(err)))\n    }\n}","import {REQUEST_LIST_USER, LIST_USER_FETCH_SUCCESSFULL, LIST_USER_FETCH_FAIL, LIST_USER_HANDLE_ERROR} from '../constants/listUser-constants'\nimport {findAllUsers} from '../api/UserAPI'\n\nexport function requestListUser(){\n    return {\n        type: REQUEST_LIST_USER,\n    }\n}\n\nexport function fetchSuccessfully(users){\n    return {\n        type: LIST_USER_FETCH_SUCCESSFULL,\n        users\n    }\n}\n\nexport function fetchError(error){\n    return {\n        type: LIST_USER_FETCH_FAIL,\n        error\n    }\n}\n\nexport function handeError(){\n    return {\n        type: LIST_USER_HANDLE_ERROR,\n    }\n}\n\nexport function getListUsers(){\n    return (dispatch)=>{\n        dispatch(requestListUser())\n\n        findAllUsers()\n        .then(users=>{\n            dispatch(fetchSuccessfully(users))\n        })\n        .catch(err=>dispatch(fetchError(err)))\n    }\n}","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport {getListChats} from '../../actions/listChat-actions'\nimport {getListUsers} from '../../actions/listUser-actions'\nimport {signout} from '../../api/UserAPI'\nimport { Switch, Route } from 'react-router-dom'\nimport io from 'socket.io-client';\nimport {getAllChat} from '../../api/ChatAPI'\n\n///\nimport Tooltip from '@material-ui/core/Tooltip';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\n///\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport Search from '@material-ui/icons/Search';\nimport Enter from '@material-ui/icons/NavigateNext';\n\n///\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n///\nimport Paper from '@material-ui/core/Paper';\nimport Fab from '@material-ui/core/Fab';\nimport { array } from 'prop-types';\nlet styles = {\n\n  rightpage:{\n    display:\"inline-block\",\n    backgroundColor: \"#f2f2f2\",\n    height: \"calc(100vh)\",\n    width: \"calc(75vw - 3px)\",\n    verticalAlign: \"top\",\n  },\n  \n\n  root: {\n    width: '100%',\n    backgroundColor:'#ffffff',\n  },\n\n  search: {\n    backgroundColor: '#ffffff',\n    width:\"100%\",\n    margin: \"10px 0px\",\n  },\n\n  leftpage:{\n    position: 'relative',\n    display:\"inline-block\",\n    backgroundColor: \"#fcfcfc\",\n    height: \"calc(100vh)\",\n    width: \"25vw\",\n    borderRight:\"1px solid #cccccc\",\n  },\n\n  divappbar: {\n    flexGrow: 1,\n    margin: \"10px 20px\",\n\n  },\n\n  appbar: {\n    backgroundColor: '#d9d9d9',\n    height: \"60px\",\n    flexGrow: 1,\n  },\n\n  chatbox: {\n    backgroundColor: '#ffffff',\n    height: \"calc(100vh - 220px)\",\n    margin: \"10px 10px\",\n    flexGrow: 1,\n    padding: 20,\n    overflow: 'auto',\n  },\n  \n  onappbar: {\n    margin: \"17px\",\n    color: '#3e64a3',\n    fontWeight: 'bold',\n  },\n  \n  text: {\n    fontSize: 30,\n  },\n\n  button: {\n    margin: \"0px 20px\",\n    color:\"#ffffff\",\n    backgroundColor: '#d80f2d',\n    padding: \"20px\",\n    textAlign: 'center',\n    fontSize: \"16px\",\n    borderRadius: '50%',\n  },\n\n  inputbox : {\n    fontSize: 30,\n    margin: \"10px 20px\",\n    color:\"#ffffff\",\n    backgroundColor: '#ffffff',\n    width:'calc(100% - 150px)',\n    bottom: 0,\n  },\n\n  signout:{\n    backgroundColor: '#163260',\n    color:\"#ffffff\",\n    bottom: 0,\n    position: \"absolute\",\n    margin: \"20px 20px\",\n  },\n\n  seen:{\n    display: 'block',\n    color: '#d10c1c',\n    fontSize: '14px',\n    paddingBottom: '4px',\n    marginLeft: '1100',\n    textAlign: 'right',\n  },\n\n  othersMember:{\n    marginTop: '10px',\n  },\n  \n  currentMember:{\n    textAlign: 'right',\n    marginTop: '10px',\n  },\n\n  containsMessage:{\n    display: 'inline-block',\n  },\n\n  username:{\n    display: 'block',\n    color: '#3e64a3',\n    fontSize: '18px',\n    paddingBottom: '4px',\n    fontWeight: 'bold',\n  },\n\n  message:{\n    padding: '10px',\n    max∆Øidth: '400px',\n    margin: 0,\n    borderRadius: '12px',\n    backgroundColor: \"#cbd0d8\",\n    color: '#ffffff',\n    display: 'inline-block',\n  },\n};\n\n\nclass MainLayout extends Component {\n\n    constructor(props){\n      super(props)\n\n      this.props.getListUsers()\n      this.props.getListChats()\n      this.socket = null;\n      this.state = {\n          status: false,\n          chatsData: [],\n          seen: '',\n          search: \"\",\n          message:\"\",\n          choose:{},\n          avt:\"\",\n          tab: 1,\n          tabuser: 1,\n      }\n\n\n      getAllChat().then((res)=>{\n          this.setState({chatsData: res})\n          if(res){\n              var dataTemp= [];\n              res.map(m=>{\n                  if(m.sender == localStorage.getItem('userID') && m.receiver == this.state.choose._id) dataTemp.push(m)\n                  if(m.receiver == localStorage.getItem('userID') && m.sender == this.state.choose._id) dataTemp.push(m)\n              })\n              if(dataTemp[0]){\n                  if(dataTemp[dataTemp.length-1].isSeen && dataTemp[dataTemp.length-1].sender == localStorage.getItem('userID')) {this.setState({seen: 'SEEN'})}\n                  else {this.setState({seen: ''})}\n              }\n          }\n      })\n      this.handleKeyPressSearch = this.handleKeyPressSearch.bind(this)\n    }\n\n    onClickSignout = () => {\n      signout()\n      this.socket.close();\n      localStorage.clear();\n      this.props.history.push('/')\n      window.location.reload()\n    }\n\n    handleKeyPressSearch(e) {\n      if (e.key === 'Enter') {\n        this.handleSearch();\n      }\n    }  \n    handleSearch = () => {\n      // this.props.userData.users.map((value,i)\n\n      // )\n    }\n\n    handleToggle = value => () => {\n        const { checked } = this.state;\n        const currentIndex = checked.indexOf(value);\n        const newChecked = [...checked];\n    \n        if (currentIndex === -1) {\n        newChecked.push(value);\n        } else {\n        newChecked.splice(currentIndex, 1);\n        }\n    \n        \n    };  \n\n\n    handleScroll = () => {\n\n      var x = document.getElementById(\"boxMessage\")\n      x.scrollTop = x.scrollHeight;\n    }\n\n    handleClickUser = (user,i) => {\n      this.setState({\n        choose:user,\n        avt:i,        \n      })\n      this.props.history.push({pathname: '/app/chat/'+user.username})\n      this.setState({tab: 2},()=>{\n        // var x = document.getElementById(\"boxMessage\")\n        // x.scrollTop = x.scrollHeight;\n        this.handleScroll()\n      })\n      this.handleSeen()\n    };\n\n    handleSeen = () => {\n      getAllChat().then((res)=>{\n          this.setState({chatsData: res})\n          let dataTemp = this.state.chatsData\n\n          var lastIDChat;\n          dataTemp.map(m=>{\n              if(m.sender == this.state.choose._id && m.receiver == localStorage.getItem('userID')) lastIDChat = m._id\n          })\n\n          if(lastIDChat){\n              this.socket.emit(\"isSeen\", {chat_id : lastIDChat});\n          }\n          console.log(\"lastIDChat\", lastIDChat)\n      })\n    }\n\n    onSubmit(e) {\n      if(this.state.message){\n          this.socket.emit(\"newMessage\", {content : this.state.message, receiver: this.state.choose._id});\n          console.log('receiver'+this.state.choose.username);\n\n          var chat = {sender:localStorage.getItem('userID'), receiver:this.state.choose._id, content:this.state.message, _created:Date.now()};\n          var temp = this.state.chatsData;\n          temp.push(chat);\n          this.setState({chatsData: temp});\n          this.setState({message: \"\", seen: \"\"});\n      }\n      e.preventDefault();\n      \n    }\n\n\n    componentWillMount() {\n      let token = localStorage.getItem('userToken')\n      this.socket = io(\"https://chat-app-bbh.herokuapp.com/chat\", {\"query\":{\"token\":token}});\n      this.socket.on('newMessage', (response) => {\n        this.setState({seen: ''})\n        console.log(\"Message\",response)\n          this.setState({chatsData: response})\n      }); //hear newMessage\n      this.socket.on('isSeen', (response) => {\n          console.log(\"response\",response)\n          var dataTemp= [];\n          response.map(m=>{\n              if(m.sender ==localStorage.getItem('userID') && m.receiver == this.state.choose._id) dataTemp.push(m)\n              if(m.receiver == localStorage.getItem('userID') && m.sender == this.state.choose._id) dataTemp.push(m)\n          })\n          if(dataTemp[0]){\n              if(dataTemp[dataTemp.length-1].isSeen && dataTemp[dataTemp.length-1].sender ==localStorage.getItem('userID')) {this.setState({seen: 'SEEN'})}\n              else {this.setState({seen: ''})}\n          }\n        }); //isSeen\n      }\n    render(){\n\n        console.log(this.props.userData.users)\n\n        return(\n        <div>\n          <div style={styles.leftpage}>\n          \n          <TextField\n            onFocus={()=>this.setState({tabuser: 2})}\n            style={styles.search}\n            id=\"outlined-adornment-search\"\n            variant=\"outlined\"\n            label=\"T√¨m ki·∫øm b·∫°n b√®\"\n            value={this.state.search}\n            onChange={e=>this.setState({search: e.target.value})}  \n            onKeyPress={this.handleKeyPressSearch}     \n            InputProps={{\n              endAdornment: (\n                  <IconButton onClick={e=>this.handleSearch(e)} >\n                    <Search/>\n                  </IconButton>\n              ),\n          }}\n          />\n          \n            <List dense style={styles.root}>\n                \n                {\n                  this.state.tabuser === 1 &&(\n                    this.props.userData.users.map((value,i) => (\n                      <ListItem key={value}  onClick={ () => this.handleClickUser(value,i)}  button>\n                        <ListItemAvatar>\n                          <Avatar\n                            alt={`Avatar n¬∞${i + 1}`}\n                            src={`/avatar/${i + 1}.jpg`}\n                          />\n                        </ListItemAvatar>\n                        <ListItemText primary={value.username} />                 \n                      </ListItem>\n                    ))\n                  )\n  \n                }\n                {\n                  this.state.tabuser === 2 &&(\n                    this.props.userData.users.map((value,i) => (\n                      <ListItem key={value}  onClick={ () => this.handleClickUser(value,i)} button>\n                        <ListItemAvatar>\n                          <Avatar\n                            alt={`Avatar n¬∞${i + 1}`}\n                            src={`/avatar/${i + 1}.jpg`}\n                          />\n                        </ListItemAvatar>\n                        <ListItemText primary={value.username} />                 \n                      </ListItem>\n                    ))\n                  )\n  \n                }\n            </List>\n\n            <Fab variant=\"extended\" aria-label=\"Delete\" style={styles.signout} onClick={this.onClickSignout}  >\n             Tho√°t\n            </Fab>\n\n          </div>\n\n          <div style={styles.rightpage}>\n          <div style={styles.divappbar}>\n             {\n                this.state.tab === 1 && (\n                   <div> </div>\n               )\n             }\n             {\n                this.state.tab === 2 && (\n                   <div>\n                      <AppBar position=\"static\" style={styles.appbar} >\n                        <Toolbar variant=\"dense\" >\n                              <Avatar\n                                style={styles.onappbar}\n                                alt={`Avatar n¬∞${this.state.avt+1}`}\n                                src={`/avatar/${this.state.avt+1}.jpg`}\n                              />\n                          <Typography variant=\"h6\" color=\"inherit\" style={styles.onappbar} >\n                              {this.state.choose.username}\n                          </Typography>\n                        </Toolbar>\n                      </AppBar>\n\n                      <Paper  style={styles.chatbox} elevation={1} id='boxMessage' onMouseEnter={this.handleSeen} > \n                          {\n                            this.state.chatsData.map(m => {\n                                if((m.receiver == this.state.choose._id && m.sender == localStorage.getItem('userID'))) \n                                    {return this.renderMessage(m.sender, m.content, m._created,'Me')}\n                                if((m.receiver == localStorage.getItem('userID') && m.sender == this.state.choose._id)) \n                                    {return this.renderMessage(m.sender, m.content, m._created,this.state.choose.username)}\n                            })\n                          }\n                          <div style={styles.seen}>\n                             {this.state.seen}\n                          \n                          </div>\n                      </Paper>\n\n                      \n\n                      <form onSubmit={e => this.onSubmit(e)}  >\n                        <TextField\n                          style={styles.inputbox}\n                          id=\"outlined-adornment-message\"\n                          variant=\"outlined\"\n                          label=\"Nh·∫≠p tin nh·∫Øn\"\n                          value={this.state.message}\n                          onChange={e => this.setState({message: e.target.value})}\n                          onFocus={this.handleSeen}\n                        />                 \n                        <button style={styles.button}>\n                          <Enter />                          \n                        </button>\n                      </form>\n                     \n                   </div>\n               )\n             }     \n            </div>\n          </div>\n        </div>\n        \n        )\n    }\n\n    renderMessage(_id, content, _created,name) {\n      var temp;\n      if(_id==localStorage.getItem('userID'))\n      { temp = styles.currentMember }\n      if(_id==this.state.choose._id)\n      { temp = styles.othersMember }\n      return (\n        <div style={temp}  >\n          <Tooltip title={_created}  >\n              <div style={styles.containsMessage}>\n                <div style={styles.username}>\n                  {name}\n                </div>\n                <div style={styles.message}>{content}</div>\n              </div>\n          </Tooltip>\n        </div>\n      );\n    }\n}\nconst mapStateToProps = (state) => ({\n  chatData: state.chatData,\n  userData: state.userData\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getListChats: ()=>dispatch(getListChats()),\n  getListUsers: ()=>dispatch(getListUsers()),\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout)","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport PrivateRoute from './components/PrivateRoute'\n\nimport Login from './screens/login/Login'\nimport Main from './screens/layout/MainLayout'\n\nconst Root = () => (\n    <Router>\n        <div>\n            <Route exact path=\"/\" component={Login} />\n            <PrivateRoute path=\"/app\" component={Main} />\n        </div>\n    </Router>\n)\n\nexport default Root;","import React, { Component } from 'react';\nimport './App.css';\nimport { Provider } from 'react-redux';\nimport reduxStore from \"./reduxStore\";\nimport Root from \"./router\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={reduxStore}>\n        <Root />\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}